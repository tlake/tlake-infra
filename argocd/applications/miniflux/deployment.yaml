kind: Deployment
apiVersion: apps/v1
metadata:
  name: "miniflux-app"
  labels:
    app: "miniflux"

spec:
  replicas: 1
  selector:
    matchLabels:
      app: "miniflux"
  template:
    metadata:
      labels:
        app: "miniflux"
    spec:
      containers:
        - name: "miniflux"
          env:
            - name: "ADMIN_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: "config"
                  key: "miniflux_admin_password"

            - name: "ADMIN_USERNAME"
              valueFrom:
                secretKeyRef:
                  name: "config"
                  key: "miniflux_admin_user"

            - name: "BASE_URL"
              value: "https://rss.tlake.io"

            - name: "CREATE_ADMIN"
              value: "1"

            - name: "METRICS_COLLECTOR"
              value: "1"

            - name: "POSTGRES_DB"
              valueFrom:
                secretKeyRef:
                  name: "config"
                  key: "postgres_db"

            - name: "POSTGRES_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: "config"
                  key: "postgres_password"

            - name: "POSTGRES_USER"
              valueFrom:
                secretKeyRef:
                  name: "config"
                  key: "postgres_user"

            - name: "DATABASE_URL"
              value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@postgres:5432/$(POSTGRES_DB)?sslmode=disable"

            - name: "RUN_MIGRATIONS"
              value: "1"

          image: "miniflux/miniflux:2.2.1"
          ports:
            - name: "app"
              containerPort: 8080

---

kind: Deployment
apiVersion: apps/v1
metadata:
  name: "miniflux-db"
  labels:
    app: "miniflux"

spec:
  replicas: 1
  selector:
    matchLabels:
      app: "miniflux"
  template:
    metadata:
      labels:
        app: "miniflux"
    spec:
      containers:
        - name: "postgres"
          env:
            - name: "POSTGRES_DB"
              valueFrom:
                secretKeyRef:
                  name: "config"
                  key: "postgres_db"

            - name: "POSTGRES_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: "config"
                  key: "postgres_password"

            - name: "POSTGRES_USER"
              valueFrom:
                secretKeyRef:
                  name: "config"
                  key: "postgres_user"

          image: "postgres:latest"
          ports:
            - name: "db"
              containerPort: 5432
          volumeMounts:
            - name: "postgres-data"
              mountPath: "/var/lib/postgresql/data"

        - name: "alpine"
          image: "alpine:latest"
          command: [ "/bin/sh", "-c", "--" ]
          args: [ "while true; do sleep 30; done;" ]
          env:
            - name: "POSTGRES_DB"
              valueFrom:
                secretKeyRef:
                  name: "config"
                  key: "postgres_db"

            - name: "POSTGRES_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: "config"
                  key: "postgres_password"

            - name: "POSTGRES_USER"
              valueFrom:
                secretKeyRef:
                  name: "config"
                  key: "postgres_user"

            - name: "DATABASE_URL"
              value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@miniflux-postgres:5432/$(POSTGRES_DB)"

      volumes:
        - name: "postgres-data"
          persistentVolumeClaim:
            claimName: "postgres-data"

