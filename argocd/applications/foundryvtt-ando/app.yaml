kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app: "foundryvtt-ando"
    service: "foundryvtt-ando-app"
  name: "foundryvtt-ando-app"
  namespace: "foundryvtt-ando"

spec:
  replicas: 1
  revisionHistoryLimit: 0

  selector:
    matchLabels:
      app: "foundryvtt-ando"
      service: "foundryvtt-ando-app"

  template:
    metadata:
      labels:
        app: "foundryvtt-ando"
        service: "foundryvtt-ando-app"
      name: "foundryvtt-ando-app"
      namespace: "foundryvtt-ando"

    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: "kubernetes.io/hostname"
                  operator: In
                  values:
                    - "thicket2"

      containers:
        - name: "foundryvtt"
          # version 11.315
          image: "felddy/foundryvtt@sha256:6a79a9fe9110d7447e7b36f534402884a2c88783dc59b7d25943a3c47145ab03"
          imagePullPolicy: "IfNotPresent"

          env:
            - name: "CONTAINER_CACHE"
              value: "/container-cache"
            
            - name: "CONTAINER_CACHE_SIZE"
              value: "10"
            
            - name: "FOUNDRY_ADMIN_KEY"
              valueFrom:
                secretKeyRef:
                  name: "config"
                  key: "FOUNDRY_ADMIN_KEY"
            
            - name: "FOUNDRY_COMPRESS_WEBSOCKET"
              value: "true"
            
            - name: "FOUNDRY_CSS_THEME"
              value: "fantasy"
            
            - name: "FOUNDRY_HOSTNAME"
              valueFrom:
                secretKeyRef:
                  name: "config"
                  key: "FOUNDRY_HOSTNAME"
          
            - name: "FOUNDRY_LICENSE_KEY"
              valueFrom:
                secretKeyRef:
                  name: "config"
                  key: "FOUNDRY_LICENSE_KEY"
          
            - name: "FOUNDRY_MINIFY_STATIC_FILES"
              value: "true"
            
            - name: "FOUNDRY_TELEMETRY"
              value: "false"
            
            - name: "TIMEZONE"
              value: "America/New_York"

          ports:
            - name: "app"
              containerPort: 30000

          resources:
            requests:
              cpu: "1000m"
              memory: "800Mi"

          volumeMounts:
            - name: "container-cache"
              mountPath: "/container-cache"

            - name: "data"
              mountPath: "/data"

            - name: "load"
              mountPath: "/load"

      hostname: "ando-foundry"

      imagePullSecrets:
        - name: "dockerhub-tlake-read-only"

      volumes:
        - name: "container-cache"
          persistentVolumeClaim:
            claimName: "container-cache"

        - name: "data"
          persistentVolumeClaim:
            claimName: "data"

        - name: "load"
          persistentVolumeClaim:
            claimName: "load"

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: "foundryvtt-ando"
    service: "foundryvtt-ando-app"
  name: "foundryvtt-ando-app"
  namespace: "foundryvtt-ando"

spec:
  ports:
    - name: "http-traffic"
      port: 80
      targetPort: "app"

  selector:
    app: "foundryvtt-ando"
    service: "foundryvtt-ando-app"

---

apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  labels:
    app: "foundryvtt-ando"
    service: "foundryvtt-ando-app"
  name: "foundryvtt-ando-web"
  namespace: "foundryvtt-ando"

spec:
  entryPoints:
    - web

  routes:
    - match: Host(`ando-mcfoundry.tlake.io`)
      kind: Rule
      services:
        - name: "foundryvtt-ando-app"
          port: "http-traffic"

---

apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  labels:
    app: "foundryvtt-ando"
    service: "foundryvtt-ando-app"
  name: "foundryvtt-ando-websecure"
  namespace: "foundryvtt-ando"

spec:
  entryPoints:
    - websecure

  routes:
    - match: Host(`ando-mcfoundry.tlake.io`)
      kind: Rule
      services:
        - name: "foundryvtt-ando-app"
          port: "http-traffic"

  tls:
    certResolver: "production"

