version: "3.9"

services:
  app:
    depends_on:
      - "postgres"
      - "redis"
    deploy:
      labels:
        traefik.enable: "true"
        traefik.http.routers.ghostfolio.entrypoints: "web, websecure"
        traefik.http.routers.ghostfolio.rule: "Host(`ghostfolio.tlake.io`)"
        traefik.http.routers.ghostfolio.tls: "true"
        traefik.http.routers.ghostfolio.tls.certresolver: "production"
        traefik.http.services.ghostfolio.loadbalancer.server.port: 3333
      mode: "replicated"
      replicas: 0
      restart_policy:
        condition: "any"
      placement:
        constraints:
          - "node.hostname == bolt"
    environment:
      COMPOSE_PROJECT_NAME: $COMPOSE_PROJECT_NAME
      HOST: $HOST
      REDIS_HOST: $REDIS_HOST
      REDIS_PORT: $REDIS_PORT
      REDIS_PASSWORD: $REDIS_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_HOST: $POSTGRES_HOST
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      TZ: $TZ
      ACCESS_TOKEN_SALT: $ACCESS_TOKEN_SALT
      DATABASE_URL: $DATABASE_URL
      JWT_SECRET_KEY: $JWT_SECRET_KEY
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:3333/api/v1/health']
      interval: "10s"
      timeout: "5s"
      retries: 5
    image: "ghostfolio/ghostfolio:latest"
    networks:
      - "home"
      - "ghostfolio"
    ports:
      - "3333:3333"

  postgres:
    deploy:
      mode: "replicated"
      replicas: 0
      restart_policy:
        condition: "any"
      placement:
        constraints:
          - "node.hostname == bolt"
    environment:
      COMPOSE_PROJECT_NAME: $COMPOSE_PROJECT_NAME
      HOST: $HOST
      REDIS_HOST: $REDIS_HOST
      REDIS_PORT: $REDIS_PORT
      REDIS_PASSWORD: $REDIS_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_HOST: $POSTGRES_HOST
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      TZ: $TZ
      ACCESS_TOKEN_SALT: $ACCESS_TOKEN_SALT
      DATABASE_URL: $DATABASE_URL
      JWT_SECRET_KEY: $JWT_SECRET_KEY
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}']
      interval: 10s
      timeout: 5s
      retries: 5
    image: "postgres:15"
    networks:
      - "ghostfolio"
    volumes:
      - "postgres:/var/lib/postgresql/data"

  redis:
    command: ['redis-server', '--requirepass', $REDIS_PASSWORD]
    deploy:
      mode: "replicated"
      replicas: 0
      restart_policy:
        condition: "any"
      placement:
        constraints:
          - "node.hostname == bolt"
    environment:
      COMPOSE_PROJECT_NAME: $COMPOSE_PROJECT_NAME
      HOST: $HOST
      REDIS_HOST: $REDIS_HOST
      REDIS_PORT: $REDIS_PORT
      REDIS_PASSWORD: $REDIS_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_HOST: $POSTGRES_HOST
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      TZ: $TZ
      ACCESS_TOKEN_SALT: $ACCESS_TOKEN_SALT
      DATABASE_URL: $DATABASE_URL
      JWT_SECRET_KEY: $JWT_SECRET_KEY
    healthcheck:
      test: ['CMD-SHELL', 'redis-cli --pass $REDIS_PASSWORD ping | grep PONG']
      interval: "10s"
      timeout: "5s"
      retries: 5
    image: "redis:alpine"
    networks:
      - "ghostfolio"

networks:
  # This assumes that the "home" network is an already-existing
  # user-defined overlay network that Traefik routes across.
  home:
    external:
      name: "home"
  ghostfolio:
    driver: "overlay"

volumes:
  postgres:
